{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\EXPENSE_TRACKER\\\\frontend\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n  const [token, setToken] = useState(null);\n\n  //calculate incomes\n\n  useEffect(() => {\n    if (token) {\n      getIncomes();\n      getExpenses();\n    }\n  }, [token]);\n  const handleLogin = async (email, password) => {\n    try {\n      const response = await axios.post(`${BASE_URL}Login`, {\n        email,\n        password\n      });\n      console.log(\"Full response:\", response); // Log the full response\n\n      if (response.status === 200) {\n        // Check for successful response\n        console.log(\"Login successful:\", response.data);\n        localStorage.setItem(\"token\", response.data.token);\n        localStorage.setItem(\"refreshToken\", response.data.refreshtoken);\n        Navigate(\"/dashboard\");\n      } else {\n        console.error(\"Unexpected response status:\", response.status);\n        setError(\"Unexpected response from the server\");\n      }\n    } catch (error) {\n      console.error(\"Error details:\", error); // Log the error details\n      if (error.response) {\n        console.error(\"Error response:\", error.response.data);\n        setError(error.response.data.error || \"Invalid email or password\");\n      } else {\n        console.error(\"Error message:\", error.message);\n        setError(\"Network Error\");\n      }\n    }\n  };\n  const handleSignup = async (name, email, password) => {\n    try {\n      const response = await axios.post(`${BASE_URL}addUser`, {\n        name,\n        email,\n        password\n      });\n      console.log(\"Signup successful:\", response.data);\n      Navigate(\"/login\");\n    } catch (error) {\n      if (error.response) {\n        console.error(\"Error signing up:\", error.response.data);\n        setError(error.response.data.error || \"Error signing up\");\n      } else {\n        console.error(\"Error signing up:\", error.message);\n        setError(\"Network Error\");\n      }\n    }\n  };\n  const fetchWithToken = async function (url) {\n    let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"GET\";\n    let data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    try {\n      const config = {\n        method,\n        url: `${BASE_URL}${url}`,\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        },\n        data\n      };\n      const response = await axios(config);\n      return response.data;\n    } catch (err) {\n      setError(err.response ? err.response.data.message : \"Server Error\");\n      throw err;\n    }\n  };\n  const addIncome = async income => {\n    try {\n      const response = await axios.post(`${BASE_URL}addIncome`, income);\n      getIncomes();\n    } catch (err) {\n      setError(err.response ? err.response.data.message : \"Server Error\");\n    }\n  };\n  const getIncomes = async () => {\n    const response = await axios.get(`${BASE_URL}getIncomes`);\n    setIncomes(response.data);\n    console.log(response.data);\n  };\n  const deleteIncome = async id => {\n    const res = await axios.delete(`${BASE_URL}deleteIncome/${id}`);\n    getIncomes();\n  };\n  const totalIncome = () => {\n    let totalIncome = 0;\n    incomes.forEach(income => {\n      totalIncome = totalIncome + income.amount;\n    });\n    return totalIncome;\n  };\n\n  //calculate incomes\n  const addExpense = async income => {\n    const response = await axios.post(`${BASE_URL}addExpense`, income).catch(err => {\n      setError(err.response.data.message);\n    });\n    getExpenses();\n  };\n  const getExpenses = async () => {\n    const response = await axios.get(`${BASE_URL}getExpenses`);\n    setExpenses(response.data);\n    console.log(response.data);\n  };\n  const deleteExpense = async id => {\n    const res = await axios.delete(`${BASE_URL}deleteExpense/${id}`);\n    getExpenses();\n  };\n  const totalExpenses = () => {\n    let totalIncome = 0;\n    expenses.forEach(income => {\n      totalIncome = totalIncome + income.amount;\n    });\n    return totalIncome;\n  };\n  const totalBalance = () => {\n    return totalIncome() - totalExpenses();\n  };\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    history.sort((a, b) => {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    });\n    return history.slice(0, 3);\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      deleteIncome,\n      expenses,\n      totalIncome,\n      addExpense,\n      getExpenses,\n      deleteExpense,\n      totalExpenses,\n      totalBalance,\n      transactionHistory,\n      error,\n      setError,\n      handleLogin,\n      handleSignup,\n      email,\n      setEmail,\n      password,\n      setPassword,\n      name,\n      setName\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n_s(GlobalProvider, \"liqvjTSCLs/YLserbp1AdDKowLA=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useEffect","useState","axios","Navigate","BASE_URL","GlobalContext","createContext","GlobalProvider","children","email","setEmail","password","setPassword","name","setName","incomes","setIncomes","expenses","setExpenses","error","setError","token","setToken","getIncomes","getExpenses","handleLogin","response","post","console","log","status","data","localStorage","setItem","refreshtoken","message","handleSignup","fetchWithToken","url","method","config","headers","Authorization","err","addIncome","income","get","deleteIncome","id","res","delete","totalIncome","forEach","amount","addExpense","catch","deleteExpense","totalExpenses","totalBalance","transactionHistory","history","sort","a","b","Date","createdAt","slice","useGlobalContext"],"sources":["C:/Users/user/Desktop/EXPENSE_TRACKER/frontend/src/context/globalContext.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Navigate } from \"react-router-dom\";\n\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\n\nconst GlobalContext = React.createContext();\n\nexport const GlobalProvider = ({ children }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n  const [token, setToken] = useState(null);\n\n  //calculate incomes\n\n  useEffect(() => {\n    if (token) {\n      getIncomes();\n      getExpenses();\n    }\n  }, [token]);\n\n  const handleLogin = async (email, password) => {\n    try {\n      const response = await axios.post(`${BASE_URL}Login`, {\n        email,\n        password,\n      });\n      console.log(\"Full response:\", response); // Log the full response\n  \n      if (response.status === 200) { // Check for successful response\n        console.log(\"Login successful:\", response.data);\n        localStorage.setItem(\"token\", response.data.token);\n        localStorage.setItem(\"refreshToken\", response.data.refreshtoken);\n        Navigate(\"/dashboard\");\n      } else {\n        console.error(\"Unexpected response status:\", response.status);\n        setError(\"Unexpected response from the server\");\n      }\n    } catch (error) {\n      console.error(\"Error details:\", error); // Log the error details\n      if (error.response) {\n        console.error(\"Error response:\", error.response.data);\n        setError(error.response.data.error || \"Invalid email or password\");\n      } else {\n        console.error(\"Error message:\", error.message);\n        setError(\"Network Error\");\n      }\n    }\n  };\n  \n\n  const handleSignup = async (name, email, password) => {\n    try {\n      const response = await axios.post(`${BASE_URL}addUser`, {\n        name,\n        email,\n        password,\n      });\n      console.log(\"Signup successful:\", response.data);\n      Navigate(\"/login\");\n    } catch (error) {\n      if (error.response) {\n        console.error(\"Error signing up:\", error.response.data);\n        setError(error.response.data.error || \"Error signing up\");\n      } else {\n        console.error(\"Error signing up:\", error.message);\n        setError(\"Network Error\");\n      }\n    }\n  };\n\n  const fetchWithToken = async (url, method = \"GET\", data = null) => {\n    try {\n      const config = {\n        method,\n        url: `${BASE_URL}${url}`,\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\",\n        },\n        data,\n      };\n      const response = await axios(config);\n      return response.data;\n    } catch (err) {\n      setError(err.response ? err.response.data.message : \"Server Error\");\n      throw err;\n    }\n  };\n\n  const addIncome = async (income) => {\n    try {\n      const response = await axios.post(`${BASE_URL}addIncome`, income);\n      getIncomes();\n    } catch (err) {\n      setError(err.response ? err.response.data.message : \"Server Error\");\n    }\n  };\n\n  const getIncomes = async () => {\n    const response = await axios.get(`${BASE_URL}getIncomes`);\n    setIncomes(response.data);\n    console.log(response.data);\n  };\n\n  const deleteIncome = async (id) => {\n    const res = await axios.delete(`${BASE_URL}deleteIncome/${id}`);\n    getIncomes();\n  };\n\n  const totalIncome = () => {\n    let totalIncome = 0;\n    incomes.forEach((income) => {\n      totalIncome = totalIncome + income.amount;\n    });\n\n    return totalIncome;\n  };\n\n  //calculate incomes\n  const addExpense = async (income) => {\n    const response = await axios\n      .post(`${BASE_URL}addExpense`, income)\n      .catch((err) => {\n        setError(err.response.data.message);\n      });\n    getExpenses();\n  };\n\n  const getExpenses = async () => {\n    const response = await axios.get(`${BASE_URL}getExpenses`);\n    setExpenses(response.data);\n    console.log(response.data);\n  };\n\n  const deleteExpense = async (id) => {\n    const res = await axios.delete(`${BASE_URL}deleteExpense/${id}`);\n    getExpenses();\n  };\n\n  const totalExpenses = () => {\n    let totalIncome = 0;\n    expenses.forEach((income) => {\n      totalIncome = totalIncome + income.amount;\n    });\n\n    return totalIncome;\n  };\n\n  const totalBalance = () => {\n    return totalIncome() - totalExpenses();\n  };\n\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    history.sort((a, b) => {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    });\n\n    return history.slice(0, 3);\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        addIncome,\n        getIncomes,\n        incomes,\n        deleteIncome,\n        expenses,\n        totalIncome,\n        addExpense,\n        getExpenses,\n        deleteExpense,\n        totalExpenses,\n        totalBalance,\n        transactionHistory,\n        error,\n        setError,\n        handleLogin,\n        handleSignup,\n        email,\n        setEmail,\n        password,\n        setPassword,\n        name,\n        setName,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n\nexport const useGlobalContext = () => {\n  return useContext(GlobalContext);\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC;AAE5C,MAAMC,QAAQ,GAAG,+BAA+B;AAEhD,MAAMC,aAAa,gBAAGP,KAAK,CAACQ,aAAa,EAAE;AAE3C,OAAO,MAAMC,cAAc,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;;EAExC;;EAEAD,SAAS,CAAC,MAAM;IACd,IAAIqB,KAAK,EAAE;MACTE,UAAU,EAAE;MACZC,WAAW,EAAE;IACf;EACF,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,MAAMI,WAAW,GAAG,OAAOhB,KAAK,EAAEE,QAAQ,KAAK;IAC7C,IAAI;MACF,MAAMe,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,IAAI,CAAE,GAAEvB,QAAS,OAAM,EAAE;QACpDK,KAAK;QACLE;MACF,CAAC,CAAC;MACFiB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,QAAQ,CAAC,CAAC,CAAC;;MAEzC,IAAIA,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;QAAE;QAC7BF,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,QAAQ,CAACK,IAAI,CAAC;QAC/CC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEP,QAAQ,CAACK,IAAI,CAACV,KAAK,CAAC;QAClDW,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEP,QAAQ,CAACK,IAAI,CAACG,YAAY,CAAC;QAChE/B,QAAQ,CAAC,YAAY,CAAC;MACxB,CAAC,MAAM;QACLyB,OAAO,CAACT,KAAK,CAAC,6BAA6B,EAAEO,QAAQ,CAACI,MAAM,CAAC;QAC7DV,QAAQ,CAAC,qCAAqC,CAAC;MACjD;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdS,OAAO,CAACT,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC,CAAC,CAAC;MACxC,IAAIA,KAAK,CAACO,QAAQ,EAAE;QAClBE,OAAO,CAACT,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAACO,QAAQ,CAACK,IAAI,CAAC;QACrDX,QAAQ,CAACD,KAAK,CAACO,QAAQ,CAACK,IAAI,CAACZ,KAAK,IAAI,2BAA2B,CAAC;MACpE,CAAC,MAAM;QACLS,OAAO,CAACT,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACgB,OAAO,CAAC;QAC9Cf,QAAQ,CAAC,eAAe,CAAC;MAC3B;IACF;EACF,CAAC;EAGD,MAAMgB,YAAY,GAAG,OAAOvB,IAAI,EAAEJ,KAAK,EAAEE,QAAQ,KAAK;IACpD,IAAI;MACF,MAAMe,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,IAAI,CAAE,GAAEvB,QAAS,SAAQ,EAAE;QACtDS,IAAI;QACJJ,KAAK;QACLE;MACF,CAAC,CAAC;MACFiB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,QAAQ,CAACK,IAAI,CAAC;MAChD5B,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACd,IAAIA,KAAK,CAACO,QAAQ,EAAE;QAClBE,OAAO,CAACT,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAACO,QAAQ,CAACK,IAAI,CAAC;QACvDX,QAAQ,CAACD,KAAK,CAACO,QAAQ,CAACK,IAAI,CAACZ,KAAK,IAAI,kBAAkB,CAAC;MAC3D,CAAC,MAAM;QACLS,OAAO,CAACT,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAACgB,OAAO,CAAC;QACjDf,QAAQ,CAAC,eAAe,CAAC;MAC3B;IACF;EACF,CAAC;EAED,MAAMiB,cAAc,GAAG,gBAAOC,GAAG,EAAkC;IAAA,IAAhCC,MAAM,uEAAG,KAAK;IAAA,IAAER,IAAI,uEAAG,IAAI;IAC5D,IAAI;MACF,MAAMS,MAAM,GAAG;QACbD,MAAM;QACND,GAAG,EAAG,GAAElC,QAAS,GAAEkC,GAAI,EAAC;QACxBG,OAAO,EAAE;UACPC,aAAa,EAAG,UAASrB,KAAM,EAAC;UAChC,cAAc,EAAE;QAClB,CAAC;QACDU;MACF,CAAC;MACD,MAAML,QAAQ,GAAG,MAAMxB,KAAK,CAACsC,MAAM,CAAC;MACpC,OAAOd,QAAQ,CAACK,IAAI;IACtB,CAAC,CAAC,OAAOY,GAAG,EAAE;MACZvB,QAAQ,CAACuB,GAAG,CAACjB,QAAQ,GAAGiB,GAAG,CAACjB,QAAQ,CAACK,IAAI,CAACI,OAAO,GAAG,cAAc,CAAC;MACnE,MAAMQ,GAAG;IACX;EACF,CAAC;EAED,MAAMC,SAAS,GAAG,MAAOC,MAAM,IAAK;IAClC,IAAI;MACF,MAAMnB,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,IAAI,CAAE,GAAEvB,QAAS,WAAU,EAAEyC,MAAM,CAAC;MACjEtB,UAAU,EAAE;IACd,CAAC,CAAC,OAAOoB,GAAG,EAAE;MACZvB,QAAQ,CAACuB,GAAG,CAACjB,QAAQ,GAAGiB,GAAG,CAACjB,QAAQ,CAACK,IAAI,CAACI,OAAO,GAAG,cAAc,CAAC;IACrE;EACF,CAAC;EAED,MAAMZ,UAAU,GAAG,YAAY;IAC7B,MAAMG,QAAQ,GAAG,MAAMxB,KAAK,CAAC4C,GAAG,CAAE,GAAE1C,QAAS,YAAW,CAAC;IACzDY,UAAU,CAACU,QAAQ,CAACK,IAAI,CAAC;IACzBH,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACK,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMgB,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,MAAMC,GAAG,GAAG,MAAM/C,KAAK,CAACgD,MAAM,CAAE,GAAE9C,QAAS,gBAAe4C,EAAG,EAAC,CAAC;IAC/DzB,UAAU,EAAE;EACd,CAAC;EAED,MAAM4B,WAAW,GAAG,MAAM;IACxB,IAAIA,WAAW,GAAG,CAAC;IACnBpC,OAAO,CAACqC,OAAO,CAAEP,MAAM,IAAK;MAC1BM,WAAW,GAAGA,WAAW,GAAGN,MAAM,CAACQ,MAAM;IAC3C,CAAC,CAAC;IAEF,OAAOF,WAAW;EACpB,CAAC;;EAED;EACA,MAAMG,UAAU,GAAG,MAAOT,MAAM,IAAK;IACnC,MAAMnB,QAAQ,GAAG,MAAMxB,KAAK,CACzByB,IAAI,CAAE,GAAEvB,QAAS,YAAW,EAAEyC,MAAM,CAAC,CACrCU,KAAK,CAAEZ,GAAG,IAAK;MACdvB,QAAQ,CAACuB,GAAG,CAACjB,QAAQ,CAACK,IAAI,CAACI,OAAO,CAAC;IACrC,CAAC,CAAC;IACJX,WAAW,EAAE;EACf,CAAC;EAED,MAAMA,WAAW,GAAG,YAAY;IAC9B,MAAME,QAAQ,GAAG,MAAMxB,KAAK,CAAC4C,GAAG,CAAE,GAAE1C,QAAS,aAAY,CAAC;IAC1Dc,WAAW,CAACQ,QAAQ,CAACK,IAAI,CAAC;IAC1BH,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACK,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMyB,aAAa,GAAG,MAAOR,EAAE,IAAK;IAClC,MAAMC,GAAG,GAAG,MAAM/C,KAAK,CAACgD,MAAM,CAAE,GAAE9C,QAAS,iBAAgB4C,EAAG,EAAC,CAAC;IAChExB,WAAW,EAAE;EACf,CAAC;EAED,MAAMiC,aAAa,GAAG,MAAM;IAC1B,IAAIN,WAAW,GAAG,CAAC;IACnBlC,QAAQ,CAACmC,OAAO,CAAEP,MAAM,IAAK;MAC3BM,WAAW,GAAGA,WAAW,GAAGN,MAAM,CAACQ,MAAM;IAC3C,CAAC,CAAC;IAEF,OAAOF,WAAW;EACpB,CAAC;EAED,MAAMO,YAAY,GAAG,MAAM;IACzB,OAAOP,WAAW,EAAE,GAAGM,aAAa,EAAE;EACxC,CAAC;EAED,MAAME,kBAAkB,GAAG,MAAM;IAC/B,MAAMC,OAAO,GAAG,CAAC,GAAG7C,OAAO,EAAE,GAAGE,QAAQ,CAAC;IACzC2C,OAAO,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACrB,OAAO,IAAIC,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC;IACtD,CAAC,CAAC;IAEF,OAAOL,OAAO,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B,CAAC;EAED,oBACE,QAAC,aAAa,CAAC,QAAQ;IACrB,KAAK,EAAE;MACLtB,SAAS;MACTrB,UAAU;MACVR,OAAO;MACPgC,YAAY;MACZ9B,QAAQ;MACRkC,WAAW;MACXG,UAAU;MACV9B,WAAW;MACXgC,aAAa;MACbC,aAAa;MACbC,YAAY;MACZC,kBAAkB;MAClBxC,KAAK;MACLC,QAAQ;MACRK,WAAW;MACXW,YAAY;MACZ3B,KAAK;MACLC,QAAQ;MACRC,QAAQ;MACRC,WAAW;MACXC,IAAI;MACJC;IACF,CAAE;IAAA,UAEDN;EAAQ;IAAA;IAAA;IAAA;EAAA,QACc;AAE7B,CAAC;AAAC,GA7LWD,cAAc;AAAA,KAAdA,cAAc;AA+L3B,OAAO,MAAM4D,gBAAgB,GAAG,MAAM;EAAA;EACpC,OAAOpE,UAAU,CAACM,aAAa,CAAC;AAClC,CAAC;AAAC,IAFW8D,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}